% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/treecortreatplot.R
\name{treecortreatplot}
\alias{treecortreatplot}
\title{Visualize TreeCorTreat}
\usage{
treecortreatplot(
  hierarchy_list,
  annotated_df,
  response_variable,
  separate = T,
  num_cancor_components = 1,
  color_variable = NULL,
  size_variable = NULL,
  alpha_variable = NULL,
  advanced_list = NULL,
  annotate_number = F,
  annotate_number_column = NULL,
  annotate_number_color = "black",
  font_size = 10,
  nonleaf_label_pos = 0.6,
  nonleaf_point_gap = NULL,
  edge_path_type = "link",
  plot_type = "balloon",
  line_color = "black",
  line_type = "solid",
  plot = T
)
}
\arguments{
\item{hierarchy_list}{A hierarchy list by running \code{'extract_hrchy_text()'} or \code{'extract_hrchy_seurat()'} function. Contains 'edges', 'layout', 'immediate_children' and 'leaves_info' as 4 elements.}

\item{annotated_df}{A data frame contains summary statistic (canonical correlation or number of differential expressed genes, etc) and/or adjusted p-value for each tree node. Can be obtained by running \code{'treecor_ctprop()$canonical_corr'} or \code{'treecor_expr()$canonical_corr'} or \code{'treecor_deg()$dge.summary'}.}

\item{response_variable}{A vector of response variables.}

\item{separate}{A TRUE (default) or FALSE indicator, specifying whether response variables are evaluated separately (TRUE) or jointly (FALSE). This should be the same 'separate' parameter specified in \code{'treecor_ctprop()$canonical_corr'} or \code{'treecor_expr()$canonical_corr'}.}

\item{num_cancor_components}{Number of canonical components to be extracted (by default: 1). Only works when separate = F.}

\item{color_variable}{Set color aesthetics to a variable. This variable should be one of column names in \code{annotated_df}.}

\item{size_variable}{Set size aesthetics to a variable. This variable should be one of column names in \code{annotated_df}.}

\item{alpha_variable}{Set alpha (transparency) aesthetics to a variable. This variable should be one of column names in \code{annotated_df}.}

\item{advanced_list}{A list for more advanced figure configuration. Default is NULL. Users can specify label color or manually specify your own set of mappings from levels in the data to aesthetic values. Names of this list must be one of 'label_info','size_info','color_info', 'alpha_info','palette','plot_layout'.
\itemize{
\item label_info: a data frame that contains two columns: 'label' and 'label.color'. The label name should be same as the ones provided in \code{annotated_df}, which will be used to merged with \code{annotated_df} data frame.
\item color_info: a data frame that contains two columns: 'breaks' and 'values'. This will be used to override default setting using \code{scale_color_manual()} function (currently only support discrete variables)
\item size_info: a data frame that contains two columns: 'breaks' and 'values'. This will be used to override default setting using \code{scale_size_manual()} function (currently only support discrete variables)
\item alpha_info: a data frame that contains two columns: 'breaks' and 'values'. This will be used to override default setting using \code{scale_alpha_manual()} function (currently only support discrete variables)
\item palette: a string or an index specify palette when plotting continuous variable. Default is 'Spectral'.
\item layout_widths: a vector of two numbers to specify plot layout (left:right). The relative widths of non-leaf (left) and leaf part (right) in the grid. Default is c(10,5).
}}

\item{annotate_number}{A TRUE or FALSE (default) indicator, specifying whether to annotate numbers in the plot.}

\item{annotate_number_column}{Specify column names to annotate text}

\item{annotate_number_color}{Specify color of annotated text if \code{annotate_number = T}. Default is 'black'.}

\item{font_size}{Font size}

\item{nonleaf_label_pos}{A number from 0 to 1, controlling the relative positions of non-leaf labels (default: 0.6). Default tree height between adjacent hierarchy levels is 1.}

\item{nonleaf_point_gap}{Specify the gap between circles in non-leaf (left) part, especially useful when works with multivariate phenotypes.}

\item{edge_path_type}{Specify an edge type, must be one of:
\itemize{
\item link (default): Use straight lines to connect start and end nodes by applying \code{geom_edge_link()} in \code{ggraph} package. Recommended only for pre-set approach (i.e. generate hierarchy_list using \code{extract_hrchy_string()}).
\item diagonal: Use diagonal bezier curves to connect start and end nodes by applying \code{geom_edge_diagonal()} in \code{ggraph} package. Recommended only for pre-set approach (i.e. generate hierarchy_list using \code{extract_hrchy_string()}).
\item elbow: Draw classical dendrograms by applying \code{geom_edge_elbow()} in \code{ggraph} package. Recommended only for data-driven approach (i.e. generate hierarchy_list using \code{extract_hrchy_seurat()}).
}}

\item{plot_type}{Specify a type to display the leaf part, must be one of:
\itemize{
\item balloon (default): balloon plot, where size of a dot reflects magnitude of result.
\item bar: bar plot, where height of each bar reflects magnitude of result.
\item heatmap: heatmap, where color of each grid reflects magnitude of result.
}}

\item{line_color}{Specify line color for hierarchical tree structure (default: black).}

\item{line_type}{Specify line type for hierarchical tree structure, can be one of 'solid' (default), 'dashed', 'dotted', 'dotdash', 'longdash' and 'twodash'.}

\item{plot}{Print the plot}
}
\value{
A list of ggplot class objects and annotated data frames (in a long format):
        \itemize{
        \item left: a ggplot class object for non-leaf part
        \item right: a ggplot class object for leaf part
        \item combine: full TreeCorTreat plot by combining left and right parts
        \item left_data: annotated data frame for non-leaf part
        \item right_data: annotated data frame for leaf part, including id, xy coordinates, label, response variable(s), aesthetics (size, color, alpha)
        }
}
\description{
Generate TreeCorTreat plot to summarize and visualize the result.
}
\examples{
treecortreatplot(hierarchy_list, annotated_df, response_variable = 'severity', color_variable = 'adjp.sign', size_variable = 'cancor', alpha_variable = 'adjp.sign',nonleaf_label_pos = 0.25,nonleaf_point_gap = 0.15, plot = T)
}
\author{
Boyang Zhang <bzhang34@jhu.edu>, Hongkai Ji
}
